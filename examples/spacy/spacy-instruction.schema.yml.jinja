schema:
  $schema: https://json-schema.org/draft/2020-12/schema
  $id: https://github.com/instructions-d-installation/installation-instruction/examples/spacy/schema_spacy.yml
  title: Spacy Install Schema
  description: This is a schema which is used for constructing interactive installation instructions.
  type: object
  $comment: by Kanushka Gupta
  properties: 
    os:
      title: Operating System
      description: Specify your Operating System
      enum:
        - mac
        - windows
        - linux
      default: windows

    platform:
      title: Platform
      description: platform
      enum:
        - x86
        - arm 
      default: x86

    package:
      title: Package Manager
      description: The package manager you use.
      enum:
        - pip
        - conda
        - source
      default: pip

    hardware:
      title: Hardware
      description: Hardware you want to use- CPU or GPU?
      enum:
        - cpu
        - gpu
      type: string
      default: cpu

    configuration:
      title: Configuration
      description: the configuration you have
      enum:
        - virtual_env
        - train_models
      default: virtual_env
    
  trained_pipelines: 
    title: Trained Pipelines
    description: the language package you want to include
    type: array
    items: 
      type: string
      enum: 
        - Catalan
        - Chinese
        - Croatian 
        - Danish
        - Dutch
        - English
        - Finnish
        - French
        - German 
        - Greek
        - Italian 
        - Japanese
        - Korean 
        - Lithuanian
        - Macedonian
        - Multi-language
        - Norwegian Bokmål
        - Polish
        - Portuguese
        - Romanian
        - Russian
        - Slovenian
        - Spanish 
        - Swedish
        - Ukrainian
  allOf:      
    - if:
        properties:
          trained_pipelines:
            minLength: 1
      then: 
        properties:   
          pipeline: 
            title: Select pipeline for
            description: Select pipeline for -
            enum: 
              - efficiency
              - accuracy
            type: string
            default: efficiency

    - if:
        properties:
          hardware:
            const: gpu
      then:
        properties:
          cuda_runtime:
            enum:
              - CUDA 8.0
              - CUDA 9.0
              - CUDA 9.1
              - CUDA 9.2
              - CUDA 10.0
              - CUDA 10.1
              - CUDA 10.2
              - CUDA 11.0
              - CUDA 11.1
              - CUDA 11.2 - 11.x
              - CUDA 12.x
            
  required: 
    - os
    - platform
    - package
    - hardware
    - configuration

pretty:
  mac: macOs/OSX
  windows: Windows
  linux: Linux
  x86: x86
  arm: ARM/M1
  pip: Pip
  conda: Conda
  cpu: CPU
  gpu: GPU
  virtual_env: virtual env
  train_models: train models
  efficiency: efficiency
  accuracy: accuracy

---------
{% macro trained_pipeline_command (os, platform, package)  %}
  {% if pipeline == "efficiency" %}
    {% if trained_pipelines == "Catalan" %}
      python -m spacy download ca_core_news_sm
    {% elif trained_pipelines == "Chinese" %}
      python -m spacy download zh_core_web_sm
    {% elif trained_pipelines == "Croatian" %}
      python -m spacy download hr_core_news_sm
    {% elif trained_pipelines == "Danish" %}
      python -m spacy download da_core_news_sm
    {% elif trained_pipelines == "Dutch" %}
      python -m spacy download nl_core_news_sm
    {% elif trained_pipelines == "English" %}
      python -m spacy download en_core_web_sm
    {% elif trained_pipelines == "Finnish" %}
      python -m spacy download fi_core_news_sm
    {% elif trained_pipelines == "French" %}
      python -m spacy download fr_core_news_sm
    {% elif trained_pipelines == "German" %}
      python -m spacy download de_core_news_sm
    {% elif trained_pipelines == "Greek" %}
      python -m spacy download el_core_news_sm
    {% elif trained_pipelines == "Italian" %}
      python -m spacy download it_core_news_sm
    {% elif trained_pipelines == "Japanese" %}
      python -m spacy download ja_core_news_sm
    {% elif trained_pipelines == "Korean" %}
      python -m spacy download ko_core_news_sm
    {% elif trained_pipelines == "Lithuanian" %}
      python -m spacy download lt_core_news_sm
    {% elif trained_pipelines == "Macedonian" %}
      python -m spacy download mk_core_news_sm
    {% elif trained_pipelines == "Multi-language" %}
      python -m spacy download xx_ent_wiki_sm
    {% elif trained_pipelines == "Norwegian Bokmål" %}
      python -m spacy download nb_core_news_sm
    {% elif trained_pipelines == "Polish" %}
      python -m spacy download pl_core_news_sm
    {% elif trained_pipelines == "Portuguese" %}
      python -m spacy download pt_core_news_sm
    {% elif trained_pipelines == "Romanian" %}
      python -m spacy download ro_core_news_sm
    {% elif trained_pipelines == "Russian" %}
      python -m spacy download ru_core_news_sm
    {% elif trained_pipelines == "Slovenian" %}
      python -m spacy download sl_core_news_sm
    {% elif trained_pipelines == "Spanish" %}
      python -m spacy download es_core_news_sm
    {% elif trained_pipelines == "Swedish" %}
      python -m spacy download sv_core_news_sm
    {% elif trained_pipelines == "Ukrainian" %}
      python -m spacy download uk_core_news_sm
  {% endif %}
  {% elif pipeline == "accuracy" %}
    {% if trained_pipelines == "Catalan" %}
      python -m spacy download ca_core_news_trf
    {% elif trained_pipelines == "Chinese" %}
      python -m spacy download zh_core_web_trf
    {% elif trained_pipelines == "Croatian" %}
      python -m spacy download hr_core_news_lg
    {% elif trained_pipelines == "Danish" %}
      python -m spacy download da_core_news_trf
    {% elif trained_pipelines == "Dutch" %}
      python -m spacy download nl_core_news_lg
    {% elif trained_pipelines == "English" %}
      python -m spacy download en_core_web_trf
    {% elif trained_pipelines == "Finnish" %}
      python -m spacy download fi_core_news_lg
    {% elif trained_pipelines == "French" %}
      python -m spacy download fr_core_news_trf
    {% elif trained_pipelines == "German" %}
      python -m spacy download de_core_news_trf
    {% elif trained_pipelines == "Greek" %}
      python -m spacy download el_core_news_lg
    {% elif trained_pipelines == "Italian" %}
      python -m spacy download it_core_news_lg
    {% elif trained_pipelines == "Japanese" %}
      python -m spacy download ja_core_news_trf
    {% elif trained_pipelines == "Korean" %}
      python -m spacy download ko_core_news_lg
    {% elif trained_pipelines == "Lithuanian" %}
      python -m spacy download lt_core_news_lg
    {% elif trained_pipelines == "Macedonian" %}
      python -m spacy download mk_core_news_lg
    {% elif trained_pipelines == "Multi-language" %}
      python -m spacy download xx_ent_wiki_sm
    {% elif trained_pipelines == "Norwegian Bokmål" %}
      python -m spacy download nb_core_news_lg
    {% elif trained_pipelines == "Polish" %}
      python -m spacy download pl_core_news_lg
    {% elif trained_pipelines == "Portuguese" %}
      python -m spacy download pt_core_news_lg
    {% elif trained_pipelines == "Romanian" %}
      python -m spacy download ro_core_news_lg
    {% elif trained_pipelines == "Russian" %}
      python -m spacy download ru_core_news_lg
    {% elif trained_pipelines == "Slovenian" %}
      python -m spacy download sl_core_news_trf
    {% elif trained_pipelines == "Spanish" %}
      python -m spacy download es_core_news_trf
    {% elif trained_pipelines == "Swedish" %}
      python -m spacy download sv_core_news_lg
    {% elif trained_pipelines == "Ukrainian" %}
      python -m spacy download uk_core_news_trf
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro virtual_env_command(os, platform, package)  %}
  {% if configuration == "virtual_env" %}
    {% if package == "pip" %}
      python -m venv .env &&
      .env\Scripts\activate
    {% elif package == "conda" %}
      conda create -n venv &&
      conda activate venv
    {% elif package == "source" %}
      python -m venv .env &&
      .env\Scripts\activate
    {% endif %}
  {% elif configuration == "train_models" %}
    {% if package == "pip" %}
      -'[transformers,lookups]'
    {% elif package == "conda" %}
      conda install -c conda-forge spacy-transformers &&
      # packages only available via pip &&
      pip install spacy-lookups-data
    {% elif package == "source" %}
      -'[transformers,lookups]'
    {% endif %}
  {% endif %}
{% endmacro %}

{% if package == "pip" %}
  pip install -U pip setuptools wheel &&
  pip install -U spacy
  {% if hardware == "cpu" %}
    {% if os == "mac" %}
      {% if platform == "arm" %}
        -'[apple]'
      {% endif %}
    {% endif %}
  {% elif hardware == "gpu" %}
    {{cuda_runtime}}
    {% if platform == "arm" %}
      {% if os == "mac" %}
        -'[apple]'
      {% endif %}
    {% endif %}
  {% endif %}
{% elif package == "conda" %}
  conda install -c conda-forge spacy
  {% if hardware == "gpu" %}
    conda install -c conda-forge cupy
  {% endif %}
{% elif package == "source" %}
  pip install -U pip setuptools wheel &&
  git clone https://github.com/explosion/spaCy &&
  cd spaCy &&
  pip install -r requirements.txt &&
  pip install --no-build-isolation --editable .
  {% if hardware == "gpu" %}
    {% if platform == "x86" %}
      {{cuda_runtime}}
    {% elif platform == "arm" %}
      {% if os == "windows" %}
        '[]'
      {% elif os == "linux" %}
        -'.{{cuda_runtime}}'
      {% elif os == "mac" %}
        '.[apple]'
      {% endif %}
    {% endif %}
  {% endif %}
{% endif %}
