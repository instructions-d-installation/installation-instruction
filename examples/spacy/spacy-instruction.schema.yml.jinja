schema:
  $schema: https://json-schema.org/draft/2020-12/schema
  $id: https://github.com/instructions-d-installation/installation-instruction/examples/spacy/schema_spacy.yml
  title: Spacy Install Schema
  description: This is a schema which is used for constructing interactive installation instructions.
  type: object
  $comment: by Kanushka Gupta
  properties: 
    os:
      title: Operating System
      description: Specify your Operating System
      enum:
        - mac
        - windows
        - linux
      default: windows

    platform:
      title: Platform
      description: platform
      enum:
        - x86
        - arm 
      default: x86

    package:
      title: Package Manager
      description: The package manager you use.
      enum:
        - pip
        - conda
        - source
      default: pip

    hardware:
      title: Hardware
      description: Hardware you want to use- CPU or GPU?
      enum:
        - cpu
        - gpu
      type: string
      default: cpu

    configuration:
      title: Configuration
      description: the configuration you have
      enum:
        - venv
        - train_models
    
   trained_pipelines: 
      title: Trained Pipelines
      description: the language package you want to include
      type: array
      items: 
        type: string
        enum: [
          "Catalan", "Chinese", "Croatian", "Danish", "Dutch", "English", "Finnish",
          "French", "German", "Greek", "Italian", "Japanese", "Korean", "Lithuanian",
          "Macedonian", "Multi-language", "Norwegian Bokm√•l", "Polish", "Portuguese",
          "Romanian", "Russian", "Slovenian", "Spanish", "Swedish", "Ukrainian"
        ]
        
  if:
    properties:
      trained_pipelines:
        then: 
          properties:   
            pipeline: 
              title: Select pipeline for
              description: Select pipeline for -
              anyOf: 
                - efficiency
                - accuracy
              type: string
              default: efficiency

  if:
    properties:
      hardware:
        const: gpu
  then:
    properties:
      cuda_runtime:
        enum:
          - CUDA 8.0
          - CUDA 9.0
          - CUDA 9.1
          - CUDA 9.2
          - CUDA 10.0
          - CUDA 10.1
          - CUDA 10.2
          - CUDA 11.0
          - CUDA 11.1
          - CUDA 11.2 - 11.x
          - CUDA 12.x
          
  required: [
    "os",
    "platform",
    "package",
    "hardware"
  ]

pretty:
  mac: macOs/OSX
  windows: Windows
  linux: Linux
  x86: x86
  arm: ARM/M1
  pip: Pip
  conda: Conda
  cpu: CPU
  gpu: GPU
  venv: virtual env
  train_models: train models
  efficiency: efficiency
  accuracy: accuracy

---------------

{% if package == "pip" %}
  pip install -U pip setuptools wheel &&
  pip install -U spacy

    {% if hardware == "cpu"  %}
      {% if os == "mac"%}
        {% if platform == "arm"%}
          -'[apple]'
        {% endif %}
      {% endif %}
    {% endif %}

    {%if hardware == "gpu" %}
      {% if os == "linux"%}
        [cuda111]
      {% endif %}
      {%if os == "mac"%}
        [apple]
      {%endif%}
    {%endif%}
{%endif%}    

{% if package == "conda" %}     
  conda install -c conda-forge spacy
  {%if hardware == "gpu"%}
    conda install -c conda-forge cupy
  {%endif%}
{%endif%}

{%if package == "source"%}
  pip install -U pip setuptools wheel &&
  git clone https://github.com/explosion/spaCy &&
  cd spaCy &&
  pip install -r requirements.txt &&
  pip install --no-build-isolation --editable .

  {% if hardware == "gpu"%}
    {% if platform == "x86"%}
      '[cuda111]'
    {%endif%}
    {% if platform == "arm"%}
      {%if os == "windows"%}
        '[]'
      {%endif%}
      {% if os == "linux"%} 
        '[cuda111]'
      {%endif%}
      {% if os == "mac"%} 
        '[apple]'
      {%endif%}
    {%endif%}
  {%endif%}
{%endif%}